// Mocks generated by Mockito 5.0.16 from annotations
// in food_order_app/test/features/foods/data/repository/food_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:food_order_app/core/model/food_category.dart' as _i6;
import 'package:food_order_app/features/foods/data/dataSource/foods_data_source.dart'
    as _i3;
import 'package:food_order_app/features/foods/data/model/food_model.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:supabase_flutter/supabase_flutter.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeSupabase_0 extends _i1.Fake implements _i2.Supabase {}

/// A class which mocks [FoodDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockFoodDataSourceImpl extends _i1.Mock
    implements _i3.FoodDataSourceImpl {
  MockFoodDataSourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Supabase get supabase => (super.noSuchMethod(Invocation.getter(#supabase),
      returnValue: _FakeSupabase_0()) as _i2.Supabase);
  @override
  _i4.Future<List<_i5.FoodModel>> getAllFood() =>
      (super.noSuchMethod(Invocation.method(#getAllFood, []),
              returnValue: Future<List<_i5.FoodModel>>.value(<_i5.FoodModel>[]))
          as _i4.Future<List<_i5.FoodModel>>);
  @override
  _i4.Future<List<_i5.FoodModel>> getFilteredFood(
          _i6.Food_Category? food_category) =>
      (super.noSuchMethod(Invocation.method(#getFilteredFood, [food_category]),
              returnValue: Future<List<_i5.FoodModel>>.value(<_i5.FoodModel>[]))
          as _i4.Future<List<_i5.FoodModel>>);
  @override
  _i4.Future<List<_i5.FoodModel>> getHotFood() =>
      (super.noSuchMethod(Invocation.method(#getHotFood, []),
              returnValue: Future<List<_i5.FoodModel>>.value(<_i5.FoodModel>[]))
          as _i4.Future<List<_i5.FoodModel>>);
  @override
  String toString() => super.toString();
}
